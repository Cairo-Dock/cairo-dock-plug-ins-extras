#0.1.2

#[gtk-about]
[Icon]
#j+[0;128] Desired icon size for this applet
#{Set to 0Â to use the default applet size}
icon size = 0;0

#s[Default] Name of the icon as it will appear in its caption in the dock:
name = 

#S+[Default] Image filename:
icon = 

#d Name of the dock it belongs to:
dock name = 

order=

#b Always display the icon, even when the dock is hidden?
always visi = false

#A
handbook=YoutubeDl

#[gtk-convert]
[Desklet]

#j+[48;512] Desklet's dimension (width x height) :
#{Depending on your WindowManager, you can resize it with ALT + middle_click or ALT + left_click for exemple.}
size = 96;96

#i[-2048;2048] Desklet's position (x ; y) :
#{Depending on your WindowManager, you can move it with ALT + left_click}
x position=0
#i[-2048;2048] ...
y position=0

#b Is detached from the dock ?
initially detached=false
#l[Normal;Keep above;Keep below;On Widget Layer;Reserve space] Accessibility :
#{for CompizFusion's "widget layer", set behaviour in Compiz to: (class=Cairo-dock & type=utility)}
accessibility=0
#b Should be visible on all desktops ?
sticky=true

#b Lock position ?
#{If locked, the desklet can't be moved by simply dragging it with the left mouse button. Of course you can still move it with ALT + left_click.}
locked = false

#I[-180;180] Rotation :
#{in degrees.}
rotation = 0

use size=

#F[Decorations;gtk-orientation-portrait]
frame_deco=

#o+ Choose a decoration theme for this desklet :
#{Choose the 'personnal' one to define your own decorations below.}
decorations = default

#v
sep_deco =

#S+ Background image :
#{It's an image that will be displayed below the drawings, like a frame for exemple. Let empty to not use any.}
bg desklet =
#e+[0;1] Background tansparency :
bg alpha = 1
#i+[0;256] Left offset :
#{in pixels. Use this to adjust the left position of the drawings.}
left offset = 0
#i+[0;256] Top offset :
#{in pixels. Use this to adjust the top position of the drawings.}
top offset = 0
#i+[0;256] Right offset :
#{in pixels. Use this to adjust the right position of the drawings.}
right offset = 0
#i+[0;256] Bottom offset :
#{in pixels. Use this to adjust the bottom position of the drawings.}
bottom offset = 0
#S+ Foreground image :
#{It's an image that will be displayed above the drawings, like a reflect for exemple. Let empty to not use any.}
fg desklet =
#e+[0;1] Foreground tansparency :
fg alpha = 1


#Configuration options
[Configuration]

#b Start downloading videos imediately? :
#{Otherwise use right click and enable downloads}
startDownloads = true

#v
mySep =

#i[1;30] Time between updates:
#{in secondds}
interval = 5

#v
mySep =

#L[Open Video Folder;Show Status] Action on middle click:
actionOnMiddleClick = Open Video Folder

#v
mySep =

#b Show download progress on icon? :
#{Otherwise just use middle click to monitor status}
showProgressOnIcon = true

#b Show download status in icon label when hovering over icon? :
#{Otherwise just show the plugin name and use middle click to monitor status}
showStatusOnIcon = true

#v
mySep =

#X[Notification selections]
frame_notify=

#b Show a pop-up message when starting downloads? :
#{Otherwise quietly start to the next download}
showAlertStartDownloads = true

#b Show a pop-up message when download is complete? :
#{Otherwise quietly move finish the download}
showAlertDownloadComplete = true

#b Show a pop-up message when download is aborted? :
#{Otherwise quietly abort the download}
showAlertDownloadAbort = true

#b Show a pop-up message when adding url to queue list? :
#{Otherwise just quietly add the url to the list}
showAlertAddURL = false

#b Attempt to use desktop notifications instead of dock messages? :
#{if pynotify is installed a system notification message will appear, otherwise the standard dock dialogue messages will be used.}
usePynotify = false

#B- Use list view when URL list exceeds specified number?:
#{This is usefull if you have long lists of urls to view when you left click on the icon. Otherwise the standard dialogue message is fine.}
useListView=True

#i[1;30] Use list view when number of URLs exceed:
#{When the number of URLS exceed this number switch to list view instead of a regular dialogue}
urlListExceeds = 10

#X
myDummyFrame =
#v
mySep =

#X[Directory Setup]
frame_folders=

#D Save videos to this directory:
#{The path to save the videos to. Leave it empty to use the default one (currently in the users Videos directory).}
videos_directory = 

#D Save URL List to this directory:
#{The path to save the URL list to. Leave it empty to use the default one (currently in the users home directory).}
urlList_directory = 

[Download Options]
#>        Set the download options that will be used for the youtubedl backend
thisLabel3=

#v
mySep =

#b Resume download (--continue)?
#{Resume partially downloaded files}
resumeDownload = true

#b Ignore errors (--ignore-errors)?
#{Ignore errors during download and continue processing.}
ignoreErrors = true

#b No overwrite (--no-overwrites)?
#{If file exists fo not attempt to over write the file.}
noOverwrites = true

#b Use title (--title)?
#{Use the title of the video in the file name used to download the video}
useTitle = true

#v
mySep=

#y[Specify the video format;Limit the maximum quality;Download default format] Which download format to use:
useFormat=0

#L[H264 - MP4 at 480p;H264 - MP4 at 720p;H264 - MP4 at 1080p;H264 - FLV at 360p;H264 - FLV at 480p;H263 - FLV at 240p;Webm at 480p;Webm at 720p;3GP video] Video format (--format):
#{Specify the video format (quality) in which to download the video.}
videoFormat=

#L[H264 - MP4 at 480p;H264 - MP4 at 720p;H264 - MP4 at 1080p;H264 - FLV at 360p;H264 - FLV at 480p;H263 - FLV at 240p;Webm at 480p;Webm at 720p;3GP video] Maximum quality (--max-quality):
#{Limit the maximum quality of the videos to download.}
maxVideoFormat=

#>Download the default format.
defaultFormat=

#v
mySep =

#B- Use the Username and Passwrod authentication process.
#{Some videos require an account to be downloaded, mostly because they're flagged as mature content.}
useAuthentication=false

#F[Username/Password]
authFrame=

#s Username:
#{Specify the youtube account username UserName.}
userName=

#p Password:
#{Like the username, specifies the account password.}
userPassword=

#F
emptyFrame=

#v
mySep=
